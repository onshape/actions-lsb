name: 'actions-lsb'
description: 'Key/value store for workflow Last Successful Build'
inputs:
  operation:
    description: 'get or put'
    required: true
  ownerRepo:
    description: 'owner/repository name, ex: onshape/ios'
    required: true
  workflowBranch:
    description: 'workflow and branch, ex: ios-demo-c-test/rel-1.126'
    required: true
  putLsb:
    description: 'put operation - required: lsb SHA'
  expiryMons:
    description: 'put operation - optional: item expiry in months (TTL)'
    default: 12
outputs:
  getLsb:
    description: "get operation only: lsb SHA"
    value: ${{ steps.get.outputs.value }}

runs:
  using: "composite"
  steps:
    - name: Operation
      id: get
      run: |
        set -x
        lsb=""
        if [[ "${{ inputs.operation }}" == "get" ]]; then
            keyFormat='{ "repo": { "S": "%s" }, "workflowBranch": { "S": "%s" } }'
            keyData=$(printf "$keyFormat" ${{ inputs.ownerRepo }} ${{ inputs.workflowBranch }})
            lsb=$(aws dynamodb get-item --table-name $TABLE_NAME --key "$keyData" | jq -r '.Item.lsb.S')
        elif [[ "${{ inputs.operation }}" == "put" ]]; then
            if [[ "${{ inputs.putLsb }}" == "" ]]; then
                echo "Error: pubLsb is unset"
                exit 1
            fi
            seconds=$((${{ inputs.expiryMons }} * 31 * 24 * 60 * 60))
            expires=$(( $(date +%s) + ${seconds} ))

            itemFormat='{ "repo": { "S": "%s" }, "workflowBranch": { "S": "%s" }, "lsb": { "S": "%s" }, "expires": { "N": "%s" } }'
            itemData=$(printf "$itemFormat" ${{ inputs.ownerRepo }} ${{ inputs.workflowBranch }} ${{ inputs.putLsb }} $expires)
            aws dynamodb put-item --table-name $TABLE_NAME --item "$itemData"
        else
            echo "Error: unrecognised operation '${{ inputs.operation }}'"
            exit 1
        fi
        echo "::set-output name=value::${lsb}"
      env:
        AWS_DEFAULT_REGION: us-west-2
        AWS_REGION: us-west-2
        TABLE_NAME: actions-lsb
      shell: bash
